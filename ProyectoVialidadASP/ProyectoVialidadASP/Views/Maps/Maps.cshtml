
@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta charset="utf-8">
    <title>Maps</title>
    <link href="~/Style/StyleIndex/SMap.css" rel="stylesheet" />

</head>
<body>
    <div>
        <!-- Header -->
        @RenderPage("~/Views/Home/Header.cshtml", new { ProcessInfo = 2 })
        <!-- Header end-->
    </div>
    <!-- Map  -->
    <div id="map"></div>
    <!-- Map end -->
    <script async
            src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBtFqDJ3PeclA4FbDx9-uYvhil8NV1Mu7E&callback=initMap">
    </script>
    <script src="~/Js/JMarcador.js"></script>
    <script>

        //Funtion use the google maps
        function initMap() {
            var ubicacion = new Localizacion(() => {

                var myLatLng = { lat: ubicacion.latitude, lng: ubicacion.longitude };

                var options = {
                    center: myLatLng,
                    zoom: 14
                }
                var mapHtml = document.getElementById('map');
                var map = new google.maps.Map(mapHtml, options);

                //#region Parking Data
                var requestLocation = new XMLHttpRequest()
                requestLocation.open("GET", "@Url.Action("GetAllLocation","Maps")")
                requestLocation.onload = function () {
                    var json = requestLocation.responseText
                    var contentJson = JSON.parse(json);
                    var row = contentJson[0];
                    var rowPosition = Object.keys(row);
                    var numRegisters  = contentJson.length;

                    let pointMarker = [];
                    let markerTwo = [];
                    var informationMarker = [];
                    for (var a = 0; a < numRegisters ; a++) {
                        row = contentJson[a];
                        if (row[rowPosition[1]]=='V') {
                            var Coordinates = { lat: Number(row[rowPosition[4]]), lng: Number(row[rowPosition[5]]) };
                            if (row[rowPosition[8]] == 'Tarifado') {
                                var CoordinatesTwo = { lat: Number(row[rowPosition[6]]), lng: Number(row[rowPosition[7]]) };
                                line = new google.maps.Polyline({ path: [Coordinates, CoordinatesTwo], map: map });
                                markerTwo[row[rowPosition[8]]] = new google.maps.Marker({
                                    position: CoordinatesTwo,
                                    map: map,
                                    title: row[rowPosition[2]]
                                });
                                markerTwo[row[rowPosition[8]]].setIcon('/Imagen/endMarker.png')
                            }
                            //#region marker with your data
                            var contentMarker = '<h4>' + row[rowPosition[2]] + '</h4>' + '<p>' + row[rowPosition[11]] + '</p>';
                            pointMarker[row[rowPosition[8]]] = new google.maps.Marker({
                                position: Coordinates,
                                map: map,
                                title: row[rowPosition[2]]
                            });

                            informationMarker[row[rowPosition[8]]] = new google.maps.InfoWindow({
                                content: contentMarker
                            });
                            informationMarker[row[rowPosition[8]]].open(mapHtml, pointMarker[row[rowPosition[8]]]);
                        //#endregion
                        }
                        
                    }
                }
                requestLocation.send()
                //#endregion

                
                //#region Data Streets not available
                var requestStreet = new XMLHttpRequest()
                requestStreet.open("GET", "@Url.Action("GetAllStreet", "Maps")")
                requestStreet.onload = function () {
                    var json = requestStreet.responseText
                    
                    var contentJson = JSON.parse(json);
                    var row = contentJson[0];
                    var rowPosition = Object.keys(row);
                    var numRegisters = contentJson.length;

                    let pointMarker = [];
                    let markerTwo = [];
                    var informationMarker = [];
                    for (var a = 0; a < numRegisters; a++) {
                        row = contentJson[a];
                        if (row[rowPosition[1]] == 'V') {
                            var initialMarker = { lat: Number(row[rowPosition[8]]), lng: Number(row[rowPosition[9]]) };
                            var finalMarker = { lat: Number(row[rowPosition[10]]), lng: Number(row[rowPosition[11]]) };


                            var dateFirebase = row[rowPosition[5]];
                            var dateData = new Date(dateFirebase.substr(0, 4), dateFirebase.substr(5, 2) - 1, dateFirebase.substr(8, 2));
                            var currentDate = new Date;

                            if (dateData > currentDate) {

                                //#region marker Streets not available
                                var contentMarkerTwo = '<h4>' + row[rowPosition[3]] + '</h4>' + '<p>' + row[rowPosition[4]] + '</p>';
                                pointMarker[row[rowPosition[2]]] = new google.maps.Marker({
                                    position: initialMarker,
                                    map: map,
                                    title: row[rowPosition[3]]
                                });
                                pointMarker[row[rowPosition[2]]].setIcon('/Imagen/icoBloqueado.png');
                                markerTwo[row[rowPosition[8]]] = new google.maps.Marker({
                                    position: finalMarker,
                                    map: map,
                                    title: row[rowPosition[3]]
                                });
                                markerTwo[row[rowPosition[8]]].setIcon('/Imagen/icoBloqueado.png');
                                var line = new google.maps.Polyline({ path: [initialMarker, finalMarker], map: map })

                                console.log(row[rowPosition[8]])

                                informationMarker[row[rowPosition[4]]] = new google.maps.InfoWindow({
                                    content: contentMarkerTwo
                                });
                                informationMarker[row[rowPosition[4]]].open(mapHtml, markerTwo[row[rowPosition[8]]]);
                                //#endregion completion of marking
                            }
                        }
                        
                    }
                }
                requestStreet.send()
                //#endregion Data Streets not available
            })
        }
    </script>
</body>
</html>
